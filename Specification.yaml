openapi: 3.0.0
paths:
  /admin/create-school:
    post:
      operationId: AdminController_createSchool
      summary: 학교 페이지 생성
      description: 학교 페이지를 생성한다.
      parameters: []
      requestBody:
        required: true
        description: 학교 페이지 정보
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchoolDto'
      responses:
        '201':
          description: ''
      tags: &ref_0
        - 관리자 API
      security: &ref_1
        - bearer: []
  /admin/{schoolId}/create-news:
    post:
      operationId: AdminController_createNews
      summary: 학교 소식 생성
      description: 학교 소식을 생성한다.
      parameters:
        - name: schoolId
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        description: 학교 소식 정보
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewsDto'
      responses:
        '201':
          description: ''
      tags: *ref_0
      security: *ref_1
  /admin/update-news/{newsId}:
    patch:
      operationId: AdminController_updateNews
      summary: 학교 소식 수정
      description: 학교 소식을 수정한다.
      parameters:
        - name: newsId
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        description: 학교 소식 수정 정보
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewsDto'
      responses:
        '200':
          description: ''
      tags: *ref_0
      security: *ref_1
  /admin/delete-news/{newsId}:
    delete:
      operationId: AdminController_deleteNews
      summary: 학교 소식 삭제
      description: 학교 소식을 삭제한다.
      parameters:
        - name: newsId
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_0
      security: *ref_1
  /auth/signon:
    post:
      operationId: AuthController_signOn
      summary: 유저 생성
      description: 유저 생성
      parameters: []
      requestBody:
        required: true
        description: 유저정보
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthUserDto'
      responses:
        '201':
          description: ''
      tags: &ref_2
        - 유저 API
  /auth/signin:
    post:
      operationId: AuthController_signIn
      summary: 유저 토큰 생성
      description: 유저 토큰 생성
      parameters: []
      requestBody:
        required: true
        description: 유저정보
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthUserDto'
      responses:
        '201':
          description: ''
      tags: *ref_2
  /student/subscribe/{schoolId}:
    post:
      operationId: StudentController_subscribe
      summary: 학교 페이지 구독
      description: 학교 페이지를 구독한다.
      parameters:
        - name: schoolId
          required: true
          in: path
          schema:
            type: number
      responses:
        '201':
          description: ''
      tags: &ref_3
        - 학생 API
      security: &ref_4
        - bearer: []
  /student/subscribe:
    get:
      operationId: StudentController_getSubscribeList
      summary: 구독 목록 조회
      description: 구독한 학교 페이지 목록을 조회한다.
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_3
      security: *ref_4
  /student/{schoolId}/news:
    get:
      operationId: StudentController_getNewsBySchool
      summary: 학교 페이지 소식 조회
      description: 구독한 학교 페이지의 소식을 조회한다.
      parameters:
        - name: schoolId
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_3
      security: *ref_4
  /student/subscribe-cancel/{id}:
    delete:
      operationId: StudentController_subscribeCancel
      summary: 학교 페이지 구독 취소
      description: 구독한 학교 페이지의 구독을 취소한다.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_3
      security: *ref_4
info:
  title: NestJS School News app API Docs
  description: NestJS School News app API Description
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: http://localhost:3000/api/v1
    description: local
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
      name: JWT
      in: header
  schemas:
    CreateSchoolDto:
      type: object
      properties:
        name:
          type: string
          example: school name
          description: 학교명
        location:
          type: string
          example: school location
          description: 학교 지역명
      required:
        - name
        - location
    CreateNewsDto:
      type: object
      properties:
        title:
          type: string
          example: title
          description: 학교 소식 제목
        description:
          type: string
          example: description
          description: 학교 소식 설명
      required:
        - title
        - description
    AuthUserDto:
      type: object
      properties:
        username:
          type: string
          example: test1
          description: 사용자명
        password:
          type: string
          example: test1
          description: 비밀번호
        role:
          type: string
          example: ADMIN
          description: 사용자 권한
          enum:
            - ADMIN
            - STUDENT
      required:
        - username
        - password
        - role